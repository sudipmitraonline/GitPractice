1. git init			-> CREATE/INITIATE GIT LOCAL REPOSITORY
2. git config --list

> git config --global user.name sudipmitraonline
> git config --global user.email sudipmitraonline@gmail.com

3. git status			-> GIVES THE STATUS OF THE WORKING DIRECTORY

> touch <filename>		-> CREATE FILE IN THE FOLDER

4. git add <filename>		-> ADDS THE FILE TO STAGING AREA
5. git rm --cached <filename>	-> REMOVES FILE FROM STAGING AREA/ CACHED AREA/ INDEXED AREA
6. git commit -m <message>	-> COMMIT (SAVE) THE CHANGES TO LOCAL REPOSITORY
> git commit -a -m "<message>" 	-> (git add + git commit) 
> git commit --amend -m "<msg>" -> UPDATES THE COMMIT FOR LATEST COMMIT
> git commit --help

7. git log			-> CHECK THE VERSION HISTORY OF PROJECT

> git log --oneline
> git log -p			-> SHOWS CHANGES DONE FOR EVERY COMMIT
> git log -p -2			-> CHANGES DONE FOR LATEST 2 COMMITS
> git log --grep="Initial"	-> SHOWS THOSE COMMITS WHICH CONTAINS "INITIAL" KEYWORD
> git log --author="sudipmitraonline"	-> SHOWS THE COMMIT OF THE PARTICULAR AUTHOR
> git log --since="07/30/2021"
> git log --until="07/30/2021"
> git log --help

8. git diff			-> GIVES THE DIFFERENCE BETWEEN STAGES (WD, STAGING AREA, LOCAL REPO)

9. Restoring/Undoing Local or Staged Changes :
> git restore --staged <filename>	->RESTORE CHANGES IN STAGING AREA FROM LR
> git restore <filename>		-> RESTORE CHANGES IN WD FROM LR

10. Undoing of committed changes :
	1. SAFE WAY
		> git revert <SHA>
	2. UNSAFE WAY
		> git reset --hard <SHA>
		> git reset --hard HEAD~<no of commits>

11. git branch			-> Give the list of branches present

> git branch <branch-name>	-> Create new branch based upon current Head
> git switch <branch-name>	-> Once you have created a new branch, Use switch to switch it
> git checkout <branchname>	-> Also used to switch branches and many operations like restore branch

> git switch -c <branch-name>	-> Create a new branch and Switch to it
> git branch -d <branch-name>	-> Delete the branch
> git branch -D <branch-name>	-> Delete the Branch Forcefully
> git branch -m <new-branchname>	-> Rename the present Branch

12. git merge 			-> To merge branches

> git merge <branch-name>	-> merge the branch with the present branch. So switch the branch first before merging.
 
13. git stash			-> save the changes that you are not yet ready to commmit.
> git stash pop			-> remove the most recently stashed changes 

14. git rebase <branchname>	-> Instead of using a merge commit , rebasing rewrites history by creating new commits.

15. git tag			-> Print a list of all the tags in the current repository
> git show <tagename>		-> Show who tagged and what is the tag.
> git tag -a <tagname>		-> It will create an annotated tag.
> git tag -d <tagname>		-> It will delete the mentioned tag

16. git remote
> git remote -v			-> Displays the list of eisting remotes for repository.
> git remote add <name> <url>	-> Adding A New Remote
> git remote rename <oldname> <newname>
> git remove <name>

17. git push <remmote> <branch>	-> Push work on Github